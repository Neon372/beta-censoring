@inject IFileProvider FileProvider
@using System.Text.Json
@using System.Text.Json.Serialization
@using BetaCensor.Server.Pages.Shared
<!DOCTYPE html>
<html>
@{
    var manifest = FileProvider.GetFileInfo("dist/manifest.json");
    var parsedManifest = (manifest != null && manifest.Exists) 
        ? JsonSerializer.Deserialize<Dictionary<string, ManifestFile>>(manifest.CreateReadStream())
        : null;
    var entryPoint = ViewData["EntryPoint"]?.ToString() ?? "main";
}
<head>
    <title>@ViewData["Title"]</title>
    <environment names="Production">
    @if (parsedManifest != null) {
        @foreach (var entryfile in parsedManifest.Where(mf => mf.Value.IsEntryPoint(entryPoint) && mf.Value.Stylesheets.Any()))
        {
            @foreach (var sheet in entryfile.Value.Stylesheets.Where(s => !string.IsNullOrWhiteSpace(s)))
            {
                var filePath = "dist/" + sheet;
                @:<link rel="stylesheet" href="@filePath" />
            }
        }
    }
    </environment>
</head>

<body>

    @* @await Html.PartialAsync("_Header") *@

    <main role="main" class="container">
        @RenderBody()
    </main>
    <environment names="Development">
        <script type="module" src="~/dist/@@vite/client"></script>
    </environment>
    @* <environment names="Production">
        <script type="module" asp-src-include="dist/assets/main.*.js"></script>
    </environment> *@
    <environment names="Production">
        @if (parsedManifest != null) {
            var entryPoints = parsedManifest
                .Where(mf => mf.Value.IsEntryPoint(entryPoint));
            @foreach (var entryFile in entryPoints)
            {
                var filePath = "dist/" + entryFile.Value.FilePath;
                @:<script type="module" src="@filePath"></script>
            }
        }
    </environment>
    @RenderSection("scripts", false)
</body>

</html>